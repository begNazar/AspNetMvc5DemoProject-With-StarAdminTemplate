@using Ktys.MvcWebUI.Models
@model LoginViewModel
@{
	ViewBag.Title = "Log in";
	Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
	<!-- Required meta tags -->
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<title>@ViewBag.Title.</title>
	<!-- plugins:css -->
	<link rel="stylesheet" href="~/Content/vendors/iconfonts/mdi/css/materialdesignicons.min.css">
	<link rel="stylesheet" href="~/Content/vendors/css/vendor.bundle.base.css">
	<link rel="stylesheet" href="~/Content/vendors/css/vendor.bundle.addons.css">
	<!-- endinject -->
	<!-- plugin css for this page -->
	<!-- End plugin css for this page -->
	<!-- inject:css -->
	<link rel="stylesheet" href="~/Content/css/style.css">
	<!-- endinject -->
	<link rel="shortcut icon" href="~/Content/images/favicon.png" />
</head>
@*<div class="row">
		<div class="col-md-8">
			<section id="loginForm">
				@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
				{
					@Html.AntiForgeryToken()
					<h4>Use a local account to log in.</h4>
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
						<div class="col-md-10">
							@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<div class="checkbox">
								@Html.CheckBoxFor(m => m.RememberMe)
								@Html.LabelFor(m => m.RememberMe)
							</div>
						</div>
					</div>
					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Log in" class="btn btn-default" />
						</div>
					</div>
					<p>
						@Html.ActionLink("Register as a new user", "Register")
					</p>
					@* Enable this once you have account confirmation enabled for password reset functionality
						<p>
							@Html.ActionLink("Forgot your password?", "ForgotPassword")
						</p>*=@
				}
			</section>
		</div>
		<div class="col-md-4">
			<section id="socialLoginForm">
				@Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
			</section>
		</div>
	</div>*@
<body>
	<div class="container-scroller">
		<div class="container-fluid page-body-wrapper full-page-wrapper auth-page">
			<div class="content-wrapper d-flex align-items-center auth auth-bg-1 theme-one">
				<div class="row w-100">
					<div class="col-lg-4 mx-auto">
						<div class="auto-form-wrapper">
							@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
							{
								@Html.AntiForgeryToken()
								<form action="#">
									@Html.ValidationSummary(true, "", new { @class = "text-danger" })
									
									<div class="form-group">
										@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })

										<div class="input-group">
											@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
											@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
											<div class="input-group-append">
												<span class="input-group-text">
													<i class="mdi mdi-check-circle-outline"></i>
												</span>
											</div>
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
										
										<div class="input-group">
											@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
											@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
											<div class="input-group-append">
												<span class="input-group-text">
													<i class="mdi mdi-check-circle-outline"></i>
												</span>
											</div>
										</div>
									</div>
									<div class="form-group">
										<button class="btn btn-primary submit-btn btn-block">Login</button>
									</div>
									<div class="form-group d-flex justify-content-between">
										<div class="form-check form-check-flat mt-0">
											<label class="form-check-label">
												<input type="checkbox" class="form-check-input" checked> Keep me signed in
											</label>
										</div>
										<a href="#" class="text-small forgot-password text-black">Forgot Password</a>
									</div>
									<div class="form-group">
										<button class="btn btn-block g-login">
											<img class="mr-3" src="Content/images/file-icons/icon-google.svg" alt="">Log in with Google
										</button>
									</div>
									<div class="text-block text-center my-3">
										<span class="text-small font-weight-semibold">Not a member ?</span>
										<a href="register.html" class="text-black text-small">Create new account</a>
									</div>
								</form>
							}
						</div>
						<ul class="auth-footer">
							<li>
								<a href="#">Conditions</a>
							</li>
							<li>
								<a href="#">Help</a>
							</li>
							<li>
								<a href="#">Terms</a>
							</li>
						</ul>
						<p class="footer-text text-center">copyright © 2018 Bootstrapdash. All rights reserved.</p>
					</div>
				</div>
			</div>
			<!-- content-wrapper ends -->
		</div>
		<!-- page-body-wrapper ends -->
	</div>
	<!-- container-scroller -->
	<!-- plugins:js -->
	<script src="~/Content/vendors/js/vendor.bundle.base.js"></script>
	<script src="~/Content/vendors/js/vendor.bundle.addons.js"></script>
	<!-- endinject -->
	<!-- inject:js -->
	<script src="~/Content/js/off-canvas.js"></script>
	<script src="~/Content/js/misc.js"></script>
	<!-- endinject -->
</body>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryval")
</html>